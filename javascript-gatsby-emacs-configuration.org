This is the file that contains the configuration that I use in order to provide
wonderful editing capabilities to my emacs configuration. This conf supports
sintax highlighting, code completion, documentation and more.

* JavaScript environment
Adding the JavaScript programming environment, trying only with lsp-mode and then
considering "tide", which is a full-fledged environment, close to what elpy was
for python3. Adding the rjsx-mode package, which allows for updated sintax documentation
and keywords, considering the updated react components and new sintax, deriving js2-mode.

The following lines are needed to run the language server. We need to install the server
inside every project, we have it defined as a npm package. You might need to run it with
admin privileges (sudo):
- npm i -g typescript-language-server; npm i -g typescript
- npm i -g javascript-typescript-langserver

In order to be able to find the node path, we need to make sure that the "~/.nvm/..." path
is on the exec-path, not tangling this because the correct solution for this problem is the
[[*Syncing .profile env variables][exec-path-from-shell package]]
#+begin_src emacs-lisp
  (setq exec-path (append exec-path '("~/.nvm/versions/node/v15.11.0/bin")))
#+end_src

Another important step that I had to take due to installing node from nvm is symlinking
the node binary, found in the path above, to /usr/bin/node, in order to allow lsp and
other packages to find the binary.

Connecting js2-mode as a minor-mode to js-mode just for JavaScript linting.
#+begin_src emacs-lisp
  (use-package js2-mode
    :ensure t)
#+end_src

js-mode, which was introduced in Emacs 27, including full support for
jsx highlighting, indenting and more.
#+begin_src emacs-lisp
  (use-package js-mode
    :mode "\\.js\\'"
    :bind (:map js-mode-map ("M-." . nil))
    :hook (js-mode . (lambda ()
                       (add-hook 'xref-backend-functions #'xref-js2-xref-backend nil t))))
#+end_src

xref-js2, makes use of "rg" for searching the project for definitions and jumping
between them, which is key to software developing.
#+begin_src emacs-lisp
  (use-package xref-js2
    :ensure t
    :custom (xref-js2-search-program 'rg))
#+end_src

Adding json-mode configuration, which is a major mode for editing json files, providing
better sintax highlights, and some nice editing keybindings.
#+begin_src emacs-lisp
  (use-package json-mode
  :ensure t
  :config
  (progn
    (flycheck-add-mode 'json-jsonlint 'json-mode)
    (add-hook 'json-mode-hook 'flycheck-mode)
    (setq js-indent-level 2)
    (add-to-list 'auto-mode-alist '("\\.json\\'" . json-mode))))
#+end_src
